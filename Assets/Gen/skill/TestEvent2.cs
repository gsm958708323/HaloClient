//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.skill
{

public sealed class TestEvent2 :  skill.SkillEvent 
{
    public TestEvent2(JSONNode _json)  : base(_json) 
    {
        { if(!_json["test1"].IsNumber) { throw new SerializationException(); }  Test1 = _json["test1"]; }
        { if(!_json["test2"].IsBoolean) { throw new SerializationException(); }  Test2 = _json["test2"]; }
    }

    public TestEvent2(int test1, bool test2 )  : base() 
    {
        this.Test1 = test1;
        this.Test2 = test2;
    }

    public static TestEvent2 DeserializeTestEvent2(JSONNode _json)
    {
        return new skill.TestEvent2(_json);
    }

    public int Test1 { get; private set; }
    public bool Test2 { get; private set; }

    public const int __ID__ = -326885401;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Test1:" + Test1 + ","
        + "Test2:" + Test2 + ","
        + "}";
    }
    }
}
